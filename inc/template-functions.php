<?php
if ( ! function_exists( 'aegis_email_payment' ) ) {
	/**
	 * Send Notification Email to Admin
	 *
	 * @param array $data
	 * @param string $receipt_url
	 * @since 1.0.0
	 */
	function aegis_email_payment($data, $receipt_url) {
		$to = get_option('info_email');
		$subject = '[Payment Confirmation] Order #' . $data['order_id'];
		
		$message = 'Order ID: ' . $data['order_id'] . "\r\n";
		$message .= 'Account Name: ' . $data['account_name'] . "\r\n";
		$message .= 'Order Email: ' . $data['order_email'] . "\r\n";
		$message .= 'Transfer Bank: ' . $data['transfer_bank'] . "\r\n";
		$message .= 'Transfer\'s Date: ' . $data['transfer_date'] . "\r\n";
		$message .= 'Transfer\'s Amount: ' . $data['transfer_amount'] . "\r\n";
		$message .= 'Notes: ' . $data['notes'];
		
		$headers = 'From: Aegis <no-reply@aegis.id>' . "\r\n";
		// $attachments = array( $receipt_url );
		
		// Send email notification
		wp_mail( $to, $subject, $message, $headers );
	}
}

if ( ! function_exists( 'aegis_save_payment' ) ) {
	/**
	 * Display the payment confirmation notification on checkout
	 *
	 * @param array $data
	 * @param file $files
	 * @since 1.0.0
	 */
	function aegis_save_payment($data, $files) {
		// Payment Title
		$post_title = 'Payment Order ' . $data['order_id'];

		// Payment Data
		$payment = array(
			'post_title'    => $post_title,
			'post_content'  => $data['notes'],
			'post_author'  => 1,
			'post_type'		=> 'aegis_payment',
			'post_status'   => 'publish',
		);

		// Insert Payment
		$post_id = wp_insert_post( $payment, true );

		// Order ID
		update_field('order_id', $data['order_id'], $post_id);

		// Account Name
		update_field('account_name', $data['account_name'], $post_id);

		// Order Email
		update_field('order_email', $data['order_email'], $post_id);

		// Transfer Bank
		update_field('transfer_bank', $data['transfer_bank'], $post_id);

		// Transfer Date
		update_field('transfer_date', $data['transfer_date'], $post_id);

		// Transfer Amount
		update_field('transfer_amount', $data['transfer_amount'], $post_id);
		
		// Save Receipt
		$file = $_FILES['transfer_receipt'];
		$image_url = aegis_save_payment_receipt( $post_id, $file );

		// Email Payment to Admin
		aegis_email_payment( $data, $image_url );

		// Redirect
		wp_redirect( '/konfirmasi/?status=success' );
	}
}

if ( ! function_exists( 'aegis_save_payment_receipt' ) ) {
	/**
	 * Display the payment confirmation notification on checkout
	 *
	 * @param int $post_id
	 * @param file $file
	 * @return string $image_url
	 * @since 1.0.0
	 */
	function aegis_save_payment_receipt($post_id, $file) {
		if ( ! function_exists( 'wp_handle_upload' ) ) {
			require_once( ABSPATH . 'wp-admin/includes/file.php' );
		}

		$uploadedfile = $file;

		$upload_overrides = array( 'test_form' => false );

		$movefile = wp_handle_upload( $uploadedfile, $upload_overrides );

		$image_url = '';

		if ( $movefile && !isset( $movefile['error'] ) ) {
			// echo "File is valid, and was successfully uploaded.\n";
			// var_dump( $movefile);
			// $filename should be the path to a file in the upload directory.
			$filename = $movefile['file'];

			// The ID of the post this attachment is for.
			$parent_post_id = $post_id;

			// Check the type of file. We'll use this as the 'post_mime_type'.
			$filetype = wp_check_filetype( basename( $filename ), null );

			// Get the path to the upload directory.
			$wp_upload_dir = wp_upload_dir();

			// Prepare an array of post data for the attachment.
			$attachment = array(
				'guid'           => $wp_upload_dir['url'] . '/' . basename( $filename ), 
				'post_mime_type' => $filetype['type'],
				'post_title'     => preg_replace( '/\.[^.]+$/', '', basename( $filename ) ),
				'post_content'   => '',
				'post_status'    => 'inherit'
			);

			// Insert the attachment.
			$attach_id = wp_insert_attachment( $attachment, $filename, $parent_post_id );

			// Get image url
			$image_url = wp_get_attachment_url( $attach_id );

			// Make sure that this file is included, as wp_generate_attachment_metadata() depends on it.
			require_once( ABSPATH . 'wp-admin/includes/image.php' );

			// Generate the metadata for the attachment, and update the database record.
			$attach_data = wp_generate_attachment_metadata( $attach_id, $filename );
			wp_update_attachment_metadata( $attach_id, $attach_data );

			// Update File Field
			update_field('transfer_receipt', $attach_id, $post_id);

		} else {
			/**
			 * Error generated by _wp_handle_upload()
			 * @see _wp_handle_upload() in wp-admin/includes/file.php
			 */
			// echo $movefile['error'];
		}

		return $image_url;

	}
}

if ( ! function_exists( 'aegis_confirmation_form' ) ) {
	/**
	 * Display the payment confirmation notification on checkout
	 *
	 * @since 1.0.0
	 */
	function aegis_confirmation_form($order) { ?>
		<?php
			$today = date('d-m-Y');
			$language_domain = 'aegis';
			$order_id = '';
			$account_name = '';
			$order_email = '';
			$transfer_amount = '';
			if ( isset($order) && $order != '') {
				$order_id = $order->id;
				$account_name = $order->billing_first_name . ' ' . $order->billing_last_name;
				$order_email = $order->billing_email;
				$transfer_amount = $order->order_total;
			}
		?>
		<!-- Aegis Payment Confirmation Form -->
		<form method="post" action="" class="form payment-confirmation-form" id="aegis-payment-confirmation-form" enctype="multipart/form-data">
			<div class="form-group">
				<label for="confirmation-order-id"><?php _e( 'Order ID', $language_domain ); ?></label>
				<input type="text" name="atpc_data[order_id]" class="input form-control" id="confirmation-order-id" value="<?php echo $order_id; ?>" aria-required="true" required>
			</div>
			<div class="form-group">
				<label for="confirmation-account-name"><?php _e( 'Account Name', $language_domain ); ?></label>
				<input type="text" name="atpc_data[account_name]" class="input form-control" id="confirmation-account-name" value="<?php echo $account_name; ?>" aria-required="true" required>
			</div>
			<div class="form-group">
				<label for="confirmation-email"><?php _e( 'Email', $language_domain ); ?></label>
				<input type="email" name="atpc_data[order_email]" class="input form-control" id="confirmation-email" value="<?php echo $order_email; ?>" aria-required="true" required>
			</div>
			<div class="form-group">
				<label for="confirmation-transfer-bank"><?php _e( 'Transfer to', $language_domain ); ?></label>
				<select name="atpc_data[transfer_bank]" class="select form-control" id="confirmation-transfer-bank" aria-required="true" required>
					<option value="BCA">BCA</option>
				</select>
			</div>
			<div class="form-group">
				<label for="confirmation-transfer-date"><?php _e( 'Transfer Date', $language_domain ); ?></label>
				<input type="text" name="atpc_data[transfer_date]" class="input form-control has-datepicker" id="confirmation-transfer-date" value="<?php echo $today; ?>" aria-required="true" required>
			</div>
			<div class="form-group">
				<label for="confirmation-transfer-amount"><?php _e( 'Transfer Amount', $language_domain ); ?></label>
				<input type="text" name="atpc_data[transfer_amount]" class="input form-control" id="confirmation-transfer-amount" value="<?php echo $transfer_amount; ?>" aria-required="true" required>
			</div>
			<div class="form-group">
				<label for="confirmation-transfer-receipt"><?php _e( 'Transfer Receipt', $language_domain ); ?></label>
				<input type="file" name="transfer_receipt" class="input form-control" id="confirmation-transfer-receipt" aria-required="true" required>
			</div>
			<div class="form-group">
				<label for="confirmation-notes"><?php _e( 'Notes', $language_domain ); ?></label>
				<textarea type="file" name="atpc_data[notes]" class="input form-control" id="confirmation-notes" aria-required="false"></textarea>
			</div>
			<button type="submit" class="btn btn-lg btn-default"><?php _e( 'Send', $language_domain ); ?></button>
		</form>
	<?php
	}
}

if ( ! function_exists( 'aegis_confirmation_notification' ) ) {
	/**
	 * Display the payment confirmation notification on checkout
	 *
	 * @since 1.0.0
	 */
	function aegis_confirmation_notification($order) { ?>
		<div class="payment-notification" id="aegis-payment-confirmation-notification">
			<?php
				$format = __('Once you make the payment, please confirm at <a href="%s?order_id=%d" class="payment-notification__link">Payment Confirmation »</a>', 'aegis' );
				$link = get_page_link( 439 );
				echo sprintf($format, $link, $order->id);
			?>
		</div>
	<?php
	}
}

if ( ! function_exists( 'aegis_confirmation_notification_email' ) ) {
	/**
	 * Display the payment confirmation notification on checkout
	 *
	 * @since 1.0.0
	 */
	function aegis_confirmation_notification_email($order) { ?>
		<?php
			$text = __('Once you make your payment, please confirm at link below', 'aegis' );
			$format = __('<a href="%s?order_id=%d" class="button">Payment Confirmation »</a>', 'aegis' );
			$link = get_page_link( 439 );
			$button = sprintf($format, $link, $order->id);
		?>
		<table cellspacing="0" cellpadding="0" style="margin:30px 0;width:100%;text-align:center">
			<tbody>
				<tr><td style="padding:12px"><?php echo $text; ?></td></tr>
				<tr><td style="padding-top:20px;padding:12px"><?php echo $button; ?></td></tr>
			</tbody>
		</table>
	<?php
	}
}

if ( ! function_exists( 'aegis_switch_languages' ) ) {
	/**
	 * Display the switch language button
	 *
	 * @since 1.0.0
	 **/
	function aegis_switch_languages() {
		?>
		<div class="language-switcher">
			<div class="nav navbar-nav">
				<div class="dropdown">
					<button class="language-button" id="dLabel" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="<?php _e( 'Languages', 'aegis' ); ?>">
						<!-- 1. This code show current language -->
						<?php if (function_exists(qtranxf_getLanguage) && qtranxf_getLanguage()=='en') : ?>
							<img src="<?php echo get_stylesheet_directory_uri(); ?>/assets/images/gb.png">
						<?php elseif (function_exists(qtranxf_getLanguage) && qtranxf_getLanguage()=='id') : ?>
							<img src="<?php echo get_stylesheet_directory_uri(); ?>/assets/images/id.png">
						<?php endif ?>
						<!-- /1. -->
						<span class="caret"></span>
					</button>
					<div class="dropdown-menu language-dropdown" aria-labelledby="dLabel">
						<!-- 2. This code show qTranslate-X widget -->
						<?php echo qtranxf_generateLanguageSelectCode('image'); ?>
						<!-- /2. -->
					</div><!-- /dropdown-menu -->
				</div><!-- /dropdown -->
			</div><!-- /nav -->
		</div>
		<?php
	}
}

if ( ! function_exists( 'aegis_post_image' ) ) {
	/**
	 * Display the post featured image
	 *
	 * @since 1.0.0
	 **/
	function aegis_post_image() {
		?>
		<div class="entry-image">
			<?php
			/**
			 * Functions hooked in to storefront_post_content_before action.
			 *
			 * @hooked storefront_post_thumbnail - 10
			 */
			do_action( 'storefront_post_content_before' );
			?>
		</div>
		<?php
	}
}

// Post Header
if ( ! function_exists( 'aegis_post_header' ) ) {
	/**
	 * Display the post header with a link to the single post
	 *
	 * @since 1.0.0
	 */
	function aegis_post_header() {
		?>
		<header class="entry-header">
		<?php
		if ( is_single() ) {
			the_title( '<h1 class="entry-title">', '</h1>' );
			aegis_posted_on();
			
		} else {
			
			the_title( sprintf( '<h2 class="alpha entry-title"><a href="%s" rel="bookmark">', esc_url( get_permalink() ) ), '</a></h2>' );

			if ( 'post' == get_post_type() || 'press' === get_post_type() ) {
				aegis_posted_on();
			}

		}
		?>
		</header><!-- .entry-header -->
		<?php
	}
}

// Post Content
if ( ! function_exists( 'aegis_post_content' ) ) {
	/**
	 * Display the post content with a link to the single post
	 *
	 * @since 1.0.0
	 */
	function aegis_post_content() {
		?>
		<div class="entry-content">
		<?php

		/**
		 * Functions hooked in to storefront_post_content_before action.
		 *
		 * @hooked storefront_post_thumbnail - 10
		 */
		// do_action( 'storefront_post_content_before' );

		if ( is_single() ) {

			the_content(
				sprintf(
					__( 'Continue reading %s', 'storefront' ),
					'<span class="screen-reader-text">' . get_the_title() . '</span>'
				)
			);

		} else {

			the_excerpt();

			// echo sprintf( '<a href="%s" class="post-link">Continue Reading</a>', get_the_permalink() );

		}

		do_action( 'storefront_post_content_after' );

		wp_link_pages( array(
			'before' => '<div class="page-links">' . __( 'Pages:', 'storefront' ),
			'after'  => '</div>',
		) );
		?>
		</div><!-- .entry-content -->
		<?php
	}
}

// Post Meta
if ( ! function_exists( 'aegis_post_meta' ) ) {
	/**
	 * Display the post meta
	 *
	 * @since 1.0.0
	 */
	function aegis_post_meta() {
		?>
		<aside class="entry-meta">
			<?php if ( 'post' == get_post_type() ) : // Hide category and tag text for pages on Search.

			?>
			<div class="author">
				<?php
					echo get_avatar( get_the_author_meta( 'ID' ), 128 );
					echo '<div class="label">' . esc_attr( __( 'Written by', 'storefront' ) ) . '</div>';
					the_author_posts_link();
				?>
			</div>
			<?php
			/* translators: used between list items, there is a space after the comma */
			$categories_list = get_the_category_list( __( ', ', 'storefront' ) );

			if ( $categories_list ) : ?>
				<div class="cat-links">
					<?php
					echo '<div class="label">' . esc_attr( __( 'Posted in', 'storefront' ) ) . '</div>';
					echo wp_kses_post( $categories_list );
					?>
				</div>
			<?php endif; // End if categories. ?>

			<?php
			/* translators: used between list items, there is a space after the comma */
			$tags_list = get_the_tag_list( '', __( ', ', 'storefront' ) );

			if ( $tags_list ) : ?>
				<div class="tags-links">
					<?php
					echo '<div class="label">' . esc_attr( __( 'Tagged', 'storefront' ) ) . '</div>';
					echo wp_kses_post( $tags_list );
					?>
				</div>
			<?php endif; // End if $tags_list. ?>

		<?php endif; // End if 'post' == get_post_type(). ?>

			<?php if ( ! post_password_required() && ( comments_open() || '0' != get_comments_number() ) ) : ?>
				<div class="comments-link">
					<?php echo '<div class="label">' . esc_attr( __( 'Comments', 'storefront' ) ) . '</div>'; ?>
					<span class="comments-link"><?php comments_popup_link( __( 'Leave a comment', 'storefront' ), __( '1 Comment', 'storefront' ), __( '% Comments', 'storefront' ) ); ?></span>
				</div>
			<?php endif; ?>
		</aside>
		<?php
	}
}

// Posted On
if ( ! function_exists( 'aegis_posted_on' ) ) {
	/**
	 * Prints HTML with meta information for the current post-date/time and author.
	 */
	function aegis_posted_on() {
		$time_string = '<time class="entry-date published updated" datetime="%1$s">%2$s</time>';
		if ( get_the_time( 'U' ) !== get_the_modified_time( 'U' ) ) {
			$time_string = '<time class="entry-date published" datetime="%1$s">%2$s</time> <time class="updated" datetime="%3$s">%4$s</time>';
		}

		$time_string = sprintf( $time_string,
			esc_attr( get_the_date( 'c' ) ),
			esc_html( get_the_date() ),
			esc_attr( get_the_modified_date( 'c' ) ),
			esc_html( get_the_modified_date() )
		);

		$posted_on = sprintf( _x( '%s', 'post date', 'storefront' ), $time_string );

		$posted_on_string = apply_filters( 'storefront_single_post_posted_on_html', '<span class="posted-on">' . $posted_on . '</span>', $posted_on );

		$allowed_html = array(
			'span' => array(
				'class'  => array(),
			),
			'a'    => array(
				'href'  => array(),
				'title' => array(),
				'rel'   => array(),
			),
			'time' => array(
				'datetime' => array(),
				'class'    => array(),
			),
		);

		$post_date = wp_kses( $posted_on_string, $allowed_html );

		$author_posts_url = get_author_posts_url( get_the_author_meta( 'ID' ) );

		$author_name = get_the_author();

		$author = sprintf( '<a href="%1$s">by %2$s</a>', $author_posts_url, $author_name ) ;

		$post_author_string = apply_filters( 'storefront_single_post_posted_on_html', '<span class="post-author">' . $author . '</span>', $author );

		$post_author = wp_kses( $post_author_string, array(
			'span' => array(
				'class'  => array(),
			),
			'a'    => array(
				'href'  => array(),
				'title' => array(),
				'rel'   => array(),
			)
		) );

		$post_time = '<span class="post-time">'. get_the_date('g:i a') .'</span>';

		echo sprintf('<div class="entry-info">%1$s%2$s%3$s</div>', $post_author, $post_date, $post_time);
	}
}

// Post Time
if ( ! function_exists( 'aegis_post_date' ) ) {
	/**
	 * Prints HTML with meta information for the current post-date/time and author.
	 */
	function aegis_post_date() {
		$time_string = '<time class="entry-date published updated" datetime="%1$s">%2$s</time>';

		$time_string = sprintf( $time_string,
			esc_attr( get_the_date( 'c' ) ),
			esc_html( get_the_date() ),
			esc_attr( get_the_modified_date( 'c' ) ),
			esc_html( get_the_modified_date() )
		);

		$posted_on = sprintf( _x( '%s', 'post date', 'storefront' ), $time_string );

		$posted_on_string = apply_filters( 'storefront_single_post_posted_on_html', '<span class="posted-on">' . $posted_on . '</span>', $posted_on );

		$allowed_html = array(
			'span' => array(
				'class'  => array(),
			),
			'a'    => array(
				'href'  => array(),
				'title' => array(),
				'rel'   => array(),
			),
			'time' => array(
				'datetime' => array(),
				'class'    => array(),
			),
		);

		$post_date = wp_kses( $posted_on_string, $allowed_html );

		echo sprintf('<div class="entry-info">%s</div>', $time_string);
	}
}

if ( ! function_exists( 'aegis_the_content_by_id' ) ) {
	/**
	 * Display the post content. Optionally allows post ID to be passed
	 * @uses the_content()
	 *
	 * @param int $id Optional. Post ID.
	 * @param string $more_link_text Optional. Content for when there is more text.
	 * @param bool $stripteaser Optional. Strip teaser content before the more text. Default is false.
	 */
	function aegis_the_content_by_id( $post_id = 0, $more_link_text = null, $stripteaser = false ){
		global $post;
		$post = &get_post($post_id);
		setup_postdata( $post, $more_link_text, $stripteaser );
		the_content();
		wp_reset_postdata();
	}
}

if ( ! function_exists( 'aegis_the_title_by_id' ) ) {
	/**
	 * Display the post title. Optionally allows post ID to be passed
	 * @uses the_content()
	 *
	 * @param int $id Optional. Post ID.
	 * @param string $more_link_text Optional. Content for when there is more text.
	 * @param bool $stripteaser Optional. Strip teaser content before the more text. Default is false.
	 */
	function aegis_the_title_by_id( $post_id = 0 ){
		global $post;
		$post = &get_post($post_id);
		setup_postdata( $post );
		the_title();
		wp_reset_postdata();
	}
}

if ( ! function_exists( 'aegis_after_content' ) ) {
	/**
	 * After Content
	 * Closes the wrapping divs
	 *
	 * @since   1.0.0
	 * @return  void
	 */
	function aegis_after_content() {
		?>
			</main><!-- #main -->
		</div><!-- #primary -->
		
		<?php
	}
}

if ( ! function_exists( 'aegis_sidebar' ) ) {
	/**
	 * Shop Sidebar
	 * Get sidebar widget for shop
	 *
	 * @since   1.0.0
	 * @return  void
	 */
	function aegis_sidebar() {
		get_sidebar();
	}
}

if ( ! function_exists( 'aegis_menu_right' ) ) {
	function aegis_menu_right() {
		$menu .= '<ul class="menu menu-right">';
		if (is_user_logged_in()) {
			$menu .= '<li><a href="'. home_url( 'my-account' ) .'">My Account</a></li>';
		} else {
			$menu .= '<li><a href="'. home_url( 'my-account' ) .'">Sign In</a></li>';
			$menu .= '<li><a href="'. home_url( 'my-account' ) .'">Sign Up</a></li>';
		}
		$menu .= '</ul>';
		echo $menu;
	}
}

?>
